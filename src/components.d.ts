/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil-community/router";
import { BorderColorType, TextColorType, TextSizeType, TextVariantType } from "./common/types";
import { RichTextField } from "@prismicio/client";
export { MatchResults } from "@stencil-community/router";
export { BorderColorType, TextColorType, TextSizeType, TextVariantType } from "./common/types";
export { RichTextField } from "@prismicio/client";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface AppText {
        "color"?: TextColorType;
        "size"?: TextSizeType;
        "variant"?: TextVariantType;
    }
    interface ContentBox {
        "color"?: BorderColorType;
    }
    interface RichTextRenderer {
        "field": RichTextField;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTextElement extends Components.AppText, HTMLStencilElement {
    }
    var HTMLAppTextElement: {
        prototype: HTMLAppTextElement;
        new (): HTMLAppTextElement;
    };
    interface HTMLContentBoxElement extends Components.ContentBox, HTMLStencilElement {
    }
    var HTMLContentBoxElement: {
        prototype: HTMLContentBoxElement;
        new (): HTMLContentBoxElement;
    };
    interface HTMLRichTextRendererElement extends Components.RichTextRenderer, HTMLStencilElement {
    }
    var HTMLRichTextRendererElement: {
        prototype: HTMLRichTextRendererElement;
        new (): HTMLRichTextRendererElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "app-text": HTMLAppTextElement;
        "content-box": HTMLContentBoxElement;
        "rich-text-renderer": HTMLRichTextRendererElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface AppText {
        "color"?: TextColorType;
        "size"?: TextSizeType;
        "variant"?: TextVariantType;
    }
    interface ContentBox {
        "color"?: BorderColorType;
    }
    interface RichTextRenderer {
        "field"?: RichTextField;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "app-text": AppText;
        "content-box": ContentBox;
        "rich-text-renderer": RichTextRenderer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-text": LocalJSX.AppText & JSXBase.HTMLAttributes<HTMLAppTextElement>;
            "content-box": LocalJSX.ContentBox & JSXBase.HTMLAttributes<HTMLContentBoxElement>;
            "rich-text-renderer": LocalJSX.RichTextRenderer & JSXBase.HTMLAttributes<HTMLRichTextRendererElement>;
        }
    }
}
